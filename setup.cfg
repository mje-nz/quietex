[flake8]
max-line-length = 88
# mccabe config
max-complexity = 12
# flake8-docstrings config
docstring-convention = google
# flake8-requirements config
known_modules = attrs:[attr]
# rules
select =
    # pycodestyle
    E,W,
    # pyflakes
    F,
    # flake8-bugbear
    B,B9,
    # flake8-comprehensions (and mccabe)
    C,
    # flake8-docstrings
    D,
    # flake8-requirements
    I,
ignore =
    # pycodestyle (for black)
    E203,W503,
    # pyflakes (allow star imports)
    F403,F405
    # flake8-bugbear (overlaps with E501)
    B950,
    # flake8-comprehensions (I use dict() calls instead of literals sometimes)
    C408,
    # pydocstyle:
    # Allow __init__ without docstring
    D107,
    # Allow first line of docstring to wrap
    D415,

[isort]
# From black readme
multi_line_output=3
include_trailing_comma=True
force_grid_wrap=0
use_parentheses=True
ensure_newline_before_comments = True
line_length=88
known_first_party = quietex,test
# From seed-isort-config
known_third_party = attr,blessings,pexpect,pygments,pyte,pytest,setuptools

[mypy]
# Check the body of every function, regardless of whether it has type annotations
check_untyped_defs = true

[tool:pytest]
addopts = -r sfE --cov-config=setup.cfg

[coverage:paths]
# Consider these paths equivalent, so coverage is recorded whether running from source
# or with installed package
source =
   src
   */site-packages

[coverage:run]
# Measure branch coverage
branch = true
# Support running in parallel
parallel = true
# Measure coverage for file in these directories
source =
    quietex
    test

[coverage:report]
show_missing = true
precision = 2

[pylint.MASTER]
disable =
    # Fails in pre-commit venv
    import-error,
    # Conflicts with or covered by other tools
    bad-continuation,
    line-too-long,
    missing-docstring,
    ungrouped-imports,
    wildcard-import,
    wrong-import-order,
    # Annoying
    fixme,
    no-self-use,
    too-few-public-methods,
    unused-wildcard-import
